package design.design20_visitor;

public class text {
    /**
     * 访问者模式:
     * 把数据结构和作用于结构上的操作解耦合，使得操作集合可相对自由地演化
     * 适用于数据结构相对稳定算法又易变化的系统
     *
     * 访问者模式就是一种分离对象数据结构与行为的方法，通过这种分离，
     * 可达到为一个被访问者动态添加新的操作而无需做其它的修改的效果
     *
     * 为一个现有的类增加新功能，不得不考虑几个事情：
     * 1、新功能会不会与现有功能出现兼容性问题？
     * 2、以后会不会再需要添加？
     * 3、如果类不允许修改代码怎么办？
     *
     * 面对这些问题，最好的解决方法就是使用访问者模式，访问者模式适用于数据
     * 结构相对稳定的系统，把数据结构和算法解耦
     *
     *
     * 被访问者的数据结构不改变
     * 而访问者就是获取这些数据，然后进行操作
     * 操作类型不同，就有多少和访问者
     *
     *
     */
}
